library(rodbc)
library(RODBC)
install.packages("RODBC")
rs <- odbcConnect(dsn = "asterJoel", uid = "beehive", pwd = "beehive")
rs <- odbcConnect(dsn = "asterJoel", uid = "beehive", pwd = "beehive")
library(RODBC)
rs <- odbcConnect(dsn = "asterJoel", uid = "beehive", pwd = "beehive")
rs <- odbcConnect(dsn = "Aster", uid = "beehive", pwd = "beehive")
rs <- odbcConnect(dsn = "Aster", uid = "beehive", pwd = "beehive")
library(ODBC)
library(RODBC)
rs <- odbcConnect(dsn = "Aster", uid = "beehive", pwd = "beehive")
rs <- odbcConnect(dsn = "Aster", uid = "beehive", pwd = "beehive")
fix(rs)
fix(rs)
fix(rs)
rsdata <- sqlQuery(rs, "select rpm_avg from hdrnd.sensor_fleet_yf_spain_summury limit 100", errors=TRUE)
View(rsdata)
rsseries <- ts(rsdata, start=c(1866))
plot.ts(rsseries)
rsseriesforecasts$sse
rsseriesforecasts <- HoltWinters(rsseries, gamma=FALSE)
rsseriesforecasts$SSE
plot(rsseriesforcasts)
plot(rsseriesforecasts)
rsseriesforecasts
rsseriesforecasts$SSE
rsseriesforecasts$SSE
rsseriesforecasts
library(RODBC)
install.packages("RODBC")
install.packages("RODBC")
help(library)
savehistory("C:/Users/JL186064/Desktop/r_aster_sample.Rhistory")
getwd
getwd()
setwd("C:/Teradata/04.study/Data Scientist/Coursera/R_Programming/work")
source("pollutantmean")
source("pollutantmean.R")
x<- data.frame(1,2)
x
mean(x)
mean(x$x1)
attribute(x)
attributes(x)
class(x)
class(x$x1)
class(x$x2)
x
mean(x$x1)
?mean
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
csv = read.csv(specdata/001.csv)
csv = read.csv("specdata/001.csv")
csv
csv$sulfate
pollutant <- "sulfate"
csv$pollutant
csv$[[pollutant]]
myData<- data.frame(0)
names(myData) <- pollutant
myData
x
y <- data.frame(a=1,b=2)
rbind(x,y)
sulfate <- csv$sulfate
sulfate
good <- complete.cases(sulfate)
good
sulfate[good]
myData <- rbind(myData, sulfate[good])
mydata
myData
sulfate[good]
sulfate[good][]
sulfate[good][,]
sulfate[good][]
sulfate[good]
sulfate[good,]
sulfate[good,1]
sulfate[good][2]
sulfate[good][2][3]
sulfate[good]
rbind(myData, sulface[good])
rbind(myData, sulfate[good])
myData[3]
myData[2]
myData[sulfate]
myData$sulfate
summary(myData)
mean(myData$sulfate)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
myData<- data.frame(0)
names(myData) <- pollutant
myData
sulfate <- data.frame(sulfate=1:6)
sulfate
myData <- rbind(myData, sulfate[good])
myData <- rbind(myData, sulfate)
myData
mean(myData$sulfate)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
?sprintf
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
print(myData$sulfate)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
csv = read.csv(specdata/001.csv)
csv = read.csv("specdata/001.csv")
csv
head(csv)
csv[,sulfate]
csv[,
"sulfate]
:
.
w
}
csv
csv[,"sulfate"]
csv[,sulfate]
csv["sulfate"]
csv[,"sulfate"]
csv[,,"sulfate"]
csv[,"sulfate"]
csv["sulfate"]
csv[,]
csv[]
csv[,"id"]
csv[,"Id"]
csv[,"ID"]
csv[
"ID"]
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 3)
?head
?cor
?var
source("complete.R")
complete("specdata", 1)
result[,1]
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
setwd('~')
getwd()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd("c:\\Teradata\\04.study\\Data Scientist\\Coursera\\R_Programming\\work\\")
getwd()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("complete.R")
complete("specdata", 1)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
source("complete.R")
source("corr.R")
source("corr.R")
source("corr.R")
source("corr.R")
source("complete.R")
source("corr.R")
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
cr
source("complete.R")
## source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source("summit.R")
source("summit.R")
source("summit.R")
source("summit.R")
source("summit.R")
source("summit.R")
source("summit.R")
source("summit.R")
outcome <- read.csv("outcom-of-care-measures.csv", colClasses="character")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses="character")
head(outcome)
head(outcome)
head(outcome)
ncol(outcome)
nrow(outcome)
names(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
outcome[,11]
names(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses="character")
outcome[,11] <- as.numeric(outcome[,11])
nrow(outcome, outcome[,7] == "TX")
nrow(outcome, outcome$7 == "TX")
?subset
nrow(outcome, x7 == "TX")
subset(outcome, x7 == "TX")
subset(outcome, outcome[,7] == "TX")
subset(outcome, outcome[,7] == "TX", state)
subset(outcome, outcome[,7] == "TX", select=state)
subset(outcome, outcome[,7] == "TX", select=c(state)
)
subset(outcome, outcome[,7] == "TX", select=state)
names(outcome)
subset(outcome, outcome[,7] == "TX", select=State)
subset(outcome, outcome[,7] == "TX", select=State)
names(outcome)
?subset
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
outcome.col = data[,11]
outcome.col <- as.numeric(outcome.col)
subset(data, outcome.col, select = Hospital.Name)
outcom.col
outcome.col
subset(data, select = c(Hospital.Name, outcome.col)
)
names(outcome.col)
outcome.col
?sort
?order
?sort
data
data$x7
data$7
data$data[7]
data$data[,7]
data$cols(data[,7])
?cols
names[data[,11]]
names[data
names[data]
names[data]
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
names(data)
names(data)[7]
names(data)[11]
?order
data[,11] =  as.numeric(data[,11])
outColName <- names(data)[11]
outColName
subset(data, data[,7] == "TX", select = c(Hospital.Name, outColName)
)
subset(data, data[,7] == "TX", select = Hospital.Name)
?subset
?data.frame
outColName[1]
outColName
outColName[[1]]
class(outColName)
?numeric
stateColIdx <- 7
stateColIdx
class(stateColIdx)
stateColIdx <- 7
nrow(subset(data, data[,stateColIdx] == state, select = State)
)
nrow(subset(data, data[,stateColIdx] == "TX", select = State))
names(data)
nrow(subset(data, data[,stateColIdx] == "TX", select = data[[11]]))
nrow(subset(data, data[,stateColIdx] == "TX", select = data[,11]))
data[outColName]
stateColIdx <- 7
subset(data, data[,stateColIdx] == state, select = c(Hospital.Name, outColName))
subset(data, data[,stateColIdx] == "TX", select = c(Hospital.Name, data[outColName]))
subset(data, data[,stateColIdx] == "TX", select = c(Hospital.Name, data[11]))
subset(data, data[,stateColIdx] == "TX", select = c(Hospital.Name, outColName))
subset(data, data[,stateColIdx] == "TX", select = c(Hospital.Name, outColName[1]))
?data.frame
data$"heart attack"
?subset
subset(data, data[,stateColIdx] == state)
subset(data, data[,stateColIdx] == "TX")
sub <- subset(data, data[,stateColIdx] == "TX")
outColIdx <- 11
sub[,outColIdx]
data[row,]$Hospital.Name
row
rowNum <- sub[,outColIdx]
rowNum
data[rowNum,]$Hospital.Name
data[rowNum,]$Hospital.Name[1]
data[rowNum,]$Hospital.Name[1:5]
rowNum
order[rowNum]
order(rowNum)
sort(rowNum)
?which.min
?alphawl
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
rowNum <- sort(subData[,outColIdx])
source("best.R")
best("TX", "heart attack")
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
outColIdx <- 11
stateColIdx <- 7
outColIdx <- 11
data[,outColIdx] =  as.numeric(data[,outColIdx])
subData <- subset(data, data[,stateColIdx] == state)
subData <- subset(data, data[,stateColIdx] == "TX")
rowNum <- sort(subData[,outColIdx])
rowNum
data[rowNum,]
data[rowNum,1:11]
data[rowNum,c(2,11]]
data[rowNum,c(2,11)]
?which.min
data[rowNum,2]
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
rowNum
data[rowNum,c(2,11)]
subset(data, data[,stateColIdx] == "TX", select = c(2,11))
pitalNameColIdx <- 2
state
hospitalNameColIdx <- 2
stateColIdx <- 7
outColIdx <- 11
data[,outColIdx] =  as.numeric(data[,outColIdx])
subset(data, data[,stateColIdx] == "TX", select = c(hospitalNameColIdx,outColIdx))
sort(subData[,outColIdx])
sort(subData[,c(hospitalNameColIdx,outColIdx)])
subData <- subset(data, data[,stateColIdx] == "TX", select = c(hospitalNameColIdx,outColIdx))
sort(subData[,c(hospitalNameColIdx,outColIdx)])
hospitalNameColIdx
outColIdx
sort(subData)
names(subdata)
names(subData)
sort(subData[1])
sort(subData[,1])
sort(subData[,2])
?sort
order(subData[,2])
data[rowNum,c(2,11)]
subData
subData
which.min(subData[,2])
rowNum <- which.min(subData[,2])
data[rowNum,c(2,11)]
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
subData[,2]
source("best.R")
best("TX", "heart attack")
reset(data)
data
names(subdata)
names(subData)
which.min(subData[,2])
data[rowNum,]
data[rowNum, c(2,11)]
source("best.R")
best("TX", "heart attack")
stateColIdx <- 7
data[,stateColIdx] == state
data[,stateColIdx] == "TX"
subset(data, data[,stateColIdx] == state, select = c(hospitalNameColIdx,outColIdx,stateColIdx))
subset(data, data[,stateColIdx] == "TX", select = c(hospitalNameColIdx,outColIdx,stateColIdx))
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
source("best.R")
best("TX", "heart attack")
\
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source("best.R")
best("TX", "heart attack")
?order
best("TX", "heart failure")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
