library(rodbc)
library(RODBC)
install.packages("RODBC")
rs <- odbcConnect(dsn = "asterJoel", uid = "beehive", pwd = "beehive")
rs <- odbcConnect(dsn = "asterJoel", uid = "beehive", pwd = "beehive")
library(RODBC)
rs <- odbcConnect(dsn = "asterJoel", uid = "beehive", pwd = "beehive")
rs <- odbcConnect(dsn = "Aster", uid = "beehive", pwd = "beehive")
rs <- odbcConnect(dsn = "Aster", uid = "beehive", pwd = "beehive")
library(ODBC)
library(RODBC)
rs <- odbcConnect(dsn = "Aster", uid = "beehive", pwd = "beehive")
rs <- odbcConnect(dsn = "Aster", uid = "beehive", pwd = "beehive")
fix(rs)
fix(rs)
fix(rs)
rsdata <- sqlQuery(rs, "select rpm_avg from hdrnd.sensor_fleet_yf_spain_summury limit 100", errors=TRUE)
View(rsdata)
rsseries <- ts(rsdata, start=c(1866))
plot.ts(rsseries)
rsseriesforecasts$sse
rsseriesforecasts <- HoltWinters(rsseries, gamma=FALSE)
rsseriesforecasts$SSE
plot(rsseriesforcasts)
plot(rsseriesforecasts)
rsseriesforecasts
rsseriesforecasts$SSE
rsseriesforecasts$SSE
rsseriesforecasts
library(RODBC)
install.packages("RODBC")
install.packages("RODBC")
help(library)
savehistory("C:/Users/JL186064/Desktop/r_aster_sample.Rhistory")
setwd("~/")
getwd()
setwd("~/GitHub/R/proj3")
source("best.R")
best("TX", "heart failure")
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("BB", "heart attack")
best("MD", "heart attack")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
?order
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
?size
?length
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
?order
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attacks", "worst")
rankhospital("MDD", "heart attack", "worst")
library(datasets)
names(iris)
x<-iris[iris$Species == 'virginica',1]
x
mean(x)
summary(x)
apply(iris[,1:4],2, mean)
?apply
colMeans(iris[,1:4])
tapply(iris$Sepal.Length, iris$Species, mean)
?tapply
split(mtcars$mpg, mtcars$cyl)
lapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
tapply(data$State, data$State, length)
x <- tapply(data$State, data$State, length)
x
dd <- data.frame(State = x)
dd
source("rankall.R")
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
best("TX", "heart attack")
source("rankall.R")
head(rankall("heart attack", 20), 10)
result <- data.frame()
result
source("rankall.R")
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
subData
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
subData <- subset(data, data[,stateColIdx] == "TX"
, select = c(hospitalNameColIdx,outColIdx, stateColIdx))
hospitalNameColIdx <- 2
stateColIdx <- 7
outcomes <- c('heart attack', 'heart failure', 'pneumonia')
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
subData <- subset(data, data[,stateColIdx] == "TX"
, select = c(hospitalNameColIdx,outColIdx, stateColIdx))
outColIdx <- 11
subData <- subset(data, data[,stateColIdx] == "TX"
, select = c(hospitalNameColIdx,outColIdx, stateColIdx))
subData
subData[,c(1,3)]
subData[,c(1,3)][1]
(subData[,c(1,3)])[1]
(subData[,c(1,3)])[2]
(subData[,c(1,3)])[3]
(subData[,c(1,3)])[[1]]
x <- subData[,c(1,3)]
x[1]
x[[1]]
x[[1,]]
x[1,]
subData[,c(1,3)][1,]
subData[,c(1,3)][2,]
source("rankall.R")
head(rankall("heart attack", 20), 10)
states <- tapply(data$State, data$State, length)
states
for(state in states){}
for(state in states){ message(state) }
str(states)
class(states)
states$AK
states[AK]
names[states]
names(states)
states <- names(states)
for(state in states){ message(state)}
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
?invisible
data$State
factor(data$State)
?factor
?level
?levels
factor(data$State)
levels(factor(data$State))
rankhospital("TX", "heart failure", 4)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
sumit()
submit()
source(rprog-scripts-submitscript3.R)
source("rprog-scripts-submitscript3.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
library(bitops)
