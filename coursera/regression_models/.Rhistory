pnorm(70, mean = 80, sd = 10)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75/sqrt(100))
pnorm(16, mean = 15, sd = 1) - pnorm(14, mean = 15, sd = 1)
ppois(10, lambda = 15)
?ppois
library(datasets)
library(ggplot2)
fit <- lm(len ~ dose + supp, data=ToothGrowth)
summary(fit)
set.seed(3)
lambda <- 0.2
num_sim <- 1000
sample_size <- 40
sim <- matrix(rexp(num_sim*sample_size, rate=lambda), num_sim, sample_size)
row_means <- rowMeans(sim)
hist(row_means, breaks=50, prob=TRUE,
main="Distribution of averages of samples,
drawn from exponential distribution with lambda=0.2",
xlab="")
lines(density(row_means))
abline(v=1/lambda, col="red")
xfit <- seq(min(row_means), max(row_means), length=100)
yfit <- dnorm(xfit, mean=1/lambda, sd=(1/lambda/sqrt(sample_size)))
lines(xfit, yfit, pch=22, col="red", lty=2)
legend('topright', c("simulation", "theoretical"), lty=c(1,2), col=c("black", "red"))
qqnorm(row_means); qqline(row_means)
lambda_vals <- seq(4, 6, by=0.01)
coverage <- sapply(lambda_vals, function(lamb) {
mu_hats <- rowMeans(matrix(rexp(sample_size*num_sim, rate=0.2),
num_sim, sample_size))
ll <- mu_hats - qnorm(0.975) * sqrt(1/lambda**2/sample_size)
ul <- mu_hats + qnorm(0.975) * sqrt(1/lambda**2/sample_size)
mean(ll < lamb & ul > lamb)
})
library(ggplot2)
qplot(lambda_vals, coverage) + geom_hline(yintercept=0.95)
install.packages('miktex')
install.packages('pdf')
x <- c(140, 138, 150, 148, 135)
y <- c(132, 135, 151, 146, 130)
t.test(x = x, y = y, alt = "two.sided", paired = TRUE)$p.value
n = 9; mu = 1100; sd=30
mu + c(-1,1) * qt(.975, n-1) * sd/sqrt(n)
binom.test(3, 4, alt="greater")$p.value
poisson.test(10, T = 1787, r = (1/100), alt="less")$p.value
n1 = 9; n2 = 9; mu1 = -3; sd1 = 1.5; mu2 = 1; sd2 = 1.8
SE <- ( (n1 - 1) * sd1^2 + (n2 - 1) * sd2^2) / (n1 + n2 - 2)
t <- (mu1 - mu2) / (SE * sqrt(1/n1 + 1/n2))
( p.val = 2 * pt(t, n1+n2-2) )
power.t.test(n=100, delta=0.01, sd=0.04, sig.level=0.05, type="one.sample", alt="one.sided")$power
power.t.test(power=0.9, delta=0.01, sd=0.04, sig.level=0.05, type="one.sample", alt="one.sided")$n
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
f <- lm(y ~ x)
summary(f) # p-value: 0.05296
data(mtcars)
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
help(mtcars)
summary(fit)
summary(fit)
data(mtcars)
predict(fit, data.frame(x=mean(3)), interval="prediction")
fit2 <- lm(y ~ I(x / 2))
?I
tbl2
tbl2 <- summary(fit2)$coefficients
tbl2
fit2
summary(fit2)
mean <- tbl2[2,1]
mean
summary(fit)$coefficients[2, 1]
fit3 <- lm(y ~ I(x / 100))
summary(fit3)$coefficients[2, 1]
?resud
?resid
resid(fit)
sum(resid(fit))
data(mtcars)
attach(mtcars)
fit <- lm(mpg ~ as.factor(cyl) + wt, data=mtcars)
summary(fit) # as.factor(cyl)8  -6.0709
fit2 <- lm(mpg ~ as.factor(cyl), data=mtcars)
summary(fit2)$coef[3] # -11.56364
summary(fit)$coef[3] # -6.07086
summary(fit)
fit3 <- lm(mpg ~ as.factor(cyl)*wt, data=mtcars)
summary(fit3)
result <- anova(fit, fit3, test="Chi")
result$Pr # 0.1037502
result
fit4 <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data=mtcars)
summary(fit4)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5 <- lm(y ~ x)
lm.influence(fit5)$hat[5] # 0.9945734
lm.influence(fit5)
dfbetas(fit5)[5, 2] # -133.8226
install.packages("pdflatex")
library("pdflatex")
library(pdflatex)
pdflatex -v
install.packages("pandoc")
install.packages(pandoc)
install.packages(miktex)
install.packages("miktex")
Sys.which("pdflatex")
Sys.getenv("PATH")
setwd("~/GitHub/R/coursera/regression_models")
system("pandoc -s Report.html -o Report.pdf")
